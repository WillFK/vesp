version: 2

cache_key: &cache_key
  key: jars-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

dependencies:
  - run:
      name: Download Dependencies
      command: ./gradlew androidDependencies

jobs:
  build-stage:
      working_directory: ~/LolsumoStage
      docker:
        - image: circleci/android:api-27-alpha
      steps:
        - checkout
        - restore_cache:
            <<: *cache_key
        - run:
            name: Assemble
            command: ./gradlew assembleStaging
        - store_artifacts:
            path: app/build/outputs/apk
            destination: apk
        - save_cache:
            <<: *cache_key
            paths:
              - ~/.gradle/caches
              - ~/.gradle/wrapper

  build-live:
      working_directory: ~/LolsumoRelease
      docker:
        - image: circleci/android:api-27-alpha
      steps:
        - checkout
        - restore_cache:
            <<: *cache_key
        - run:
            name: Assemble
            command: ./gradlew assembleLive
        - store_artifacts:
            path: app/build/outputs/apk
            destination: apk
        - run:
            name: Test
            command: |
              ./gradlew testLiveRelease
              mkdir -p ~/junit/
              find . -type f -regex ".*/build/test-results/.*xml" -exec cp --parents {} ~/junit/ \;
        - store_test_results:
            path: ~/junit
        - store_artifacts:
            path: ~/junit
        - save_cache:
            <<: *cache_key
            paths:
              - ~/.gradle/caches
              - ~/.gradle/wrapper
        - run:
            name: Setup emulator
            command: sdkmanager "system-images;android-22;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-22;default;armeabi-v7a"
        - run:
            name: Launch emulator
            command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
            background: true
        - run:
            name: TestAndroid
            command: |
              ./gradlew cAT
              mkdir -p ~/cAT/
              find . -type f -regex ".*/build/reports/androidTests/connected/all/*" -exec cp --parents {} ~/cAT/ \;

workflows:
  version: 2
  build:
    jobs:
      - build-live:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/